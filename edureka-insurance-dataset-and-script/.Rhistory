md
x <- 3
x
x <- c(17, 14, 4, 5, 13, 12, 10)
y <- x[x>=10] <-4
y
z <- x[x>10] <-4
z
a <- x[x>10] == 4
a
b <- x[x.4] <- 10
b <- x[x > 4] <- 10
b
source('~/maleVector.R')
source('~/maleVector.R')
makeVector(1:1000)
makeVector(c(1:1000))
source('~/maleVector.R')
x <- 1:10000
makeVector(x)
vec <- makeVector(x)
vec$getMean()
vec <- makeVector(x)
vec
vec$getmean()
mx <- mean(x)
vec$setmean(mx)
vec$getmean()
vec
source('~/GitHub/ProgrammingAssignment2/cachematrix.R')
x = rbind(c(1, -1/4), c(-1/4, 1))
m = makeCacheMatrix(x)
m$get()
cacheSolve(m)
cacheSolve(m)
make check
make check-all
getwd()
x <- 1
print(x)
x
a <- c(1,2,3,4,5)
b <- c(1:5)
a=b
print(a=b)
msg <- "hello"
msg
a <- b
a
b
a-b
a+b
a=b-a
a+b-a
y <- c(T,2)
class(Y)
class(y)
y <- c("a", F)
class(y)
x <- c(1,2,3,4,5)
class(x)
y <- as.logical(x)
y
x <- c(0,1,2,3,4,5)
y <- as.logical(x)
y
class(y)
z <- as.character(x)
z
class(x)
class(z)
x <- c("a","b")
as.numeric(x)
as.logical(x)
subject_name <- c("john_doe", "jane dae", "Steve Graves")
temprature <- c(98.1, 98.6, 101.4)
flu_status <- c(FALSE, FALSE, TRUE)
temprature[2]
temprature[2:3]
temprature[-2]
temprature[flu_status]
rattle()
data(iris)
str(iris)
iris[2]
str(iris)
iris[2,]
ls()
databases()
plot(iris)
library(A3)
install.packages("Rcmdr")
library("Rcmdr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
detach("package:Rcmdr", unload=TRUE)
x<-c(3,4,5,8)
y<-c(1,3)
z<-x+y
z
a<-seq(1:100)
a
a <- 1:100
1
a
a <- seq(1,100,2)
a
e<-rep("X",10)
e
a<-rep(1,6)
a
c<-rep(1:6,2)
c
c<-rep(1:6,1:6)
c
x<-rep(c(4,7,1,5),c(3,2,5,2))
x
a<-c(8,7,9,2)
b<-order(a)
b
a<-c(1,2,3)
b<-c(4,5,6)
c<-data.frame(rbind(a,b))
c
d<- data.frame(c(1:3), c(4:6))
d
getwd()
setwd("~/R/Module3")
wbcd <- read.csv("wisc_bc_data.csv", stringsAsFactors = FALSE)
wbcd
source('~/R/Module3/Nearest Neigbors.r')
str(wbcd)
str(wbcd)
wbcd <- wbcd[-1]
table(wbcd$diagnosis)
str(wbcd)
wbcd <- read.csv("wisc_bc_data.csv", stringsAsFactors = FALSE)
str(wbcd)
wbcd <- wbcd[-1]
str(wbcd)
table(wbcd$diagnosis)
wbcd$diagnosis <- factor(wbcd$diagnosis, levels = c("B", "M"),
labels = c("Benign", "Malignant"))
round(prop.table(table(wbcd$diagnosis)) * 100, digits = 1)
summary(wbcd[c("radius_mean", "area_mean", "smoothness_mean")])
normalize <- function(x) {
return ((x - min(x)) / (max(x) - min(x)))
}
normalize(c(1, 2, 3, 4, 5))
normalize(c(10, 20, 30, 40, 50))
wbcd_n <- lapply(wbcd[2:31], normalize)
wbcd_n
wbcd_n <- as.data.frame(lapply(wbcd[2:31], normalize))
wbcd_n
summary(wbcd_n$area_mean)
wbcd_train <- wbcd_n[1:469, ]
wbcd_test <- wbcd_n[470:569, ]
summary(wbcd_n$area_mean)
wbcd_train <- wbcd_n[1:469, ]
wbcd_test <- wbcd_n[470:569, ]
wbcd_train
wbcd_train_labels <- wbcd[1:469, 1]
wbcd_test_labels <- wbcd[470:569, 1]
wbcd_train_labels
wbcd_test_labels
library(class)
wbcd_test_pred <- knn(train = wbcd_train, test = wbcd_test,
cl = wbcd_train_labels, k=21)
library(gmodels)
install.package(gmodels)
install.packages("gmodels")
library("gmodels", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
wbcd_test_pred <- knn(train = wbcd_train, test = wbcd_test,
cl = wbcd_train_labels, k=21)
CrossTable(x = wbcd_test_labels, y = wbcd_test_pred,
prop.chisq=FALSE)
wbcd_z <- as.data.frame(scale(wbcd[-1]))
summary(wbcd_z$area_mean)
setwd("~/R/Module3/edureka-insurance-dataset-and-script")
ins<-read.table("clust.csv",head=T,sep=",")
ins<-read.table("clust.csv",head=T,sep=",")
head(ins,10)
manes(ins)
names(ins)
ins1<-ins[,c(2,5)]
ins1
inshead(ins1)
ins1<-ins[,c(2,5)]
inshead(ins1)
head(ins1)
km<-kmeans(ins1,4)
km$cluster
km$centers
km$cluster
km$centers
km$totss
km
km<-kmeans(ins1,4)
km$cluster
km$centers
km$totss
km$withinss
km$tot.withinss
km$betweenss
km$size
km$cluster
ins2<-cbind(ins1,km$cluster)
head(ins2)
plot(ins2$Income,ins2$Age,col=km$cluster)
write.csv(ins2,"Output.csv")
ins<-read.table("clust.csv",head=T,sep=",")
head(ins,10)
head(ins,10)
names(ins)
ins1<-ins[,c(2,5)]
names(ins1)
head(ins1)
ins1
km<-kmeans(ins1,4)
km
km$cluster
km$centers
km$totss
km$withinss
km$tot.withinss
km$betweenss
km$size
km$cluster
ins2<-cbind(ins1,km$cluster)
head(ins2)
plot(ins2$Income,ins2$Age,col=km$cluster)
km
km$cluster
km$centers
?kmeans
km$x
